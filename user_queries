sheldonbazzell@Sheldons-MacBook-Pro django__ORM % python manage.py startapp users_app 
/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/Resources/Python.app/Contents/MacOS/Python: can't open file 'manage.py': [Errno 2] No such file or directory
sheldonbazzell@Sheldons-MacBook-Pro django__ORM % cd ..
sheldonbazzell@Sheldons-MacBook-Pro django % cd ..
sheldonbazzell@Sheldons-MacBook-Pro python_stack % cd my_environments 
sheldonbazzell@Sheldons-MacBook-Pro my_environments % source djangoPy3Env/bin/activate          
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro my_environments % cd ..
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro python_stack % cd django/django__ORM 
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro django__ORM % python manage.py startapp users_app
/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/Resources/Python.app/Contents/MacOS/Python: can't open file 'manage.py': [Errno 2] No such file or directory
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro django__ORM % cd single_model_orm 
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro single_model_orm % python manage.py startapp users_app
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro single_model_orm % python manage.py makemigrations
Migrations for 'users_app':
  users_app/migrations/0001_initial.py
    - Create model User
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro single_model_orm % python manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, users_app
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying sessions.0001_initial... OK
  Applying users_app.0001_initial... OK
(djangoPy3Env) sheldonbazzell@Sheldons-MacBook-Pro single_model_orm % python manage.py shell
Python 3.7.7 (default, Mar 10 2020, 15:43:03) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.15.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from users_app.models import User                                                             

In [2]: User.objects.ceate(first_name="Carlos", last_name="Floriano", email_address="cfloriano@gmail.c
   ...: om", age= 21)                                                                                 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-2-7d0bc75beddd> in <module>
----> 1 User.objects.ceate(first_name="Carlos", last_name="Floriano", email_address="cfloriano@gmail.com", age= 21)

AttributeError: 'Manager' object has no attribute 'ceate'

In [3]: User.objects.create(first_name="Carlos", last_name="Floriano", email_address="cfloriano@gmail.
   ...: com", age= 21)                                                                                
Out[3]: <User: User object (1)>

In [4]: User.objects.create(first_name="Sandra", last_name="Fraga", email_address="sfraga@gmail.com", 
   ...: age= 29)                                                                                      
Out[4]: <User: User object (2)>

In [5]: User.objects.create(first_name="Sheldon", last_name="Bazzell", email_address="sbazzell@gmail.c
   ...: om", age= 29)                                                                                 
Out[5]: <User: User object (3)>

In [6]: User.objects.all()                                                                            
Out[6]: <QuerySet [<User: User object (1)>, <User: User object (2)>, <User: User object (3)>]>

In [7]: User.objects.last()                                                                           
Out[7]: <User: User object (3)>

In [8]: User.objects.first()                                                                          
Out[8]: <User: User object (1)>

In [9]: c = User.objects.get(id=3)                                                                    

In [10]: c.last_name = "Pancakes"                                                                     

In [11]: c.save()                                                                                     

In [12]: c = User.objects.get(id=2)                                                                   

In [13]: c.delete()                                                                                   
Out[13]: (1, {'users_app.User': 1})

In [14]: User.object.all().order_by("first_name")                                                     
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-14-994814235576> in <module>
----> 1 User.object.all().order_by("first_name")

AttributeError: type object 'User' has no attribute 'object'

In [15]: User.objects.all().order_by("first_name")                                                    
Out[15]: <QuerySet [<User: User object (1)>, <User: User object (3)>]>

In [16]: User.objects.all().order_by("-first_name")                                                   
Out[16]: <QuerySet [<User: User object (3)>, <User: User object (1)>]>

In [17]: sandra = User.objects.get(first_name="Sandra")                                               
---------------------------------------------------------------------------
DoesNotExist                              Traceback (most recent call last)
<ipython-input-17-162a73330577> in <module>
----> 1 sandra = User.objects.get(first_name="Sandra")

~/Desktop/coding-dojo/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     80         def create_method(name, method):
     81             def manager_method(self, *args, **kwargs):
---> 82                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     83             manager_method.__name__ = method.__name__
     84             manager_method.__doc__ = method.__doc__

~/Desktop/coding-dojo/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py in get(self, *args, **kwargs)
    406             raise self.model.DoesNotExist(
    407                 "%s matching query does not exist." %
--> 408                 self.model._meta.object_name
    409             )
    410         raise self.model.MultipleObjectsReturned(

DoesNotExist: User matching query does not exist.

In [18]: Sandrao = User.objects.get(first_name="Sandra")                                              
---------------------------------------------------------------------------
DoesNotExist                              Traceback (most recent call last)
<ipython-input-18-7916b53a10f2> in <module>
----> 1 Sandrao = User.objects.get(first_name="Sandra")

~/Desktop/coding-dojo/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     80         def create_method(name, method):
     81             def manager_method(self, *args, **kwargs):
---> 82                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     83             manager_method.__name__ = method.__name__
     84             manager_method.__doc__ = method.__doc__

~/Desktop/coding-dojo/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py in get(self, *args, **kwargs)
    406             raise self.model.DoesNotExist(
    407                 "%s matching query does not exist." %
--> 408                 self.model._meta.object_name
    409             )
    410         raise self.model.MultipleObjectsReturned(

DoesNotExist: User matching query does not exist.

In [19]: sandra  = User.objects.get(first_name="Sandra")                                              
---------------------------------------------------------------------------
DoesNotExist                              Traceback (most recent call last)
<ipython-input-19-133ced1d62d8> in <module>
----> 1 sandra  = User.objects.get(first_name="Sandra")

~/Desktop/coding-dojo/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     80         def create_method(name, method):
     81             def manager_method(self, *args, **kwargs):
---> 82                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     83             manager_method.__name__ = method.__name__
     84             manager_method.__doc__ = method.__doc__

~/Desktop/coding-dojo/python_stack/my_environments/djangoPy3Env/lib/python3.7/site-packages/django/db/models/query.py in get(self, *args, **kwargs)
    406             raise self.model.DoesNotExist(
    407                 "%s matching query does not exist." %
--> 408                 self.model._meta.object_name
    409             )
    410         raise self.model.MultipleObjectsReturned(

DoesNotExist: User matching query does not exist.

In [20]: User.objects.all()                                                                           
Out[20]: <QuerySet [<User: User object (1)>, <User: User object (3)>]>

In [21]: User.objects.get(id=1).first_name                                                            
Out[21]: 'Carlos'

In [22]: User.objects.get(id=1).last_name                                                             
Out[22]: 'Floriano'

In [23]: x = User.objects.get(id=1)                                                                   

In [24]: x.first_name                                                                                 
Out[24]: 'Carlos'

In [25]: User.objects.all()                                                                           
Out[25]: <QuerySet [<User: User object (1)>, <User: User object (3)>]>

In [26]: User.objects.all()                                                                           
Out[26]: <QuerySet [<User: User object (1)>, <User: User object (3)>]>

In [27]: User.objects.first()__dict__                                                                 
  File "<ipython-input-27-f8cb42907d78>", line 1
    User.objects.first()__dict__
                               ^
SyntaxError: invalid syntax


In [28]: User.objects.first().__dict__                                                                
Out[28]: 
{'_state': <django.db.models.base.ModelState at 0x1120c2f90>,
 'id': 1,
 'first_name': 'Carlos',
 'last_name': 'Floriano',
 'email_address': 'cfloriano@gmail.com',
 'age': 21,
 'created_at': datetime.datetime(2020, 6, 23, 22, 15, 59, 68426, tzinfo=<UTC>),
 'updated_at': datetime.datetime(2020, 6, 23, 22, 15, 59, 68485, tzinfo=<UTC>)}

In [29]:   